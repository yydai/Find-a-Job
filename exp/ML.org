* 非技术类问题
    1. 自我介绍？
    2. 自己最有成就感的一件事？ 
    3. 你觉得你突出的地方，有亮点的地方？
    4. 有什么想问的问题吗？
    5. 你这机器学习这块，只学了这几个月。你认为你有什么优势能跟其他这个专业的人竞争？
    6. 自己评价自己
    7. 别人怎么评价你的
    8. 聪明的人和努力的人你是哪一种
    9. 聊怎么学机器学习的，对现在 ai 领域怎么看
    10. 对游戏 AI 的理解，对 AlphaGo 的理解。

* 技术类问题
** 项目
    1. 印象最深的项目, 与机器学习相关的事情？项目？
    2. 项目里的细节：包括你贡献的部分，有哪些创新点，怎么实现的，为什么这样实现效果好
    3. 天池比赛，根据这个问了很多技术相关的问题，包括数据清洗怎么做，特征工程怎么做，特征怎么选，模型选择的依据。
    4. 分类算法中你用过哪个，详细介绍一下：结合项目介绍的
** 机器学习相关
    1. LR 算法 为什么用 sigmoid 函数。这个函数有什么优点和缺点？为什么
       不用其他函数？损失函数？分布？（指数分布？）LR（逻辑回归）算法
       的 cost function 公式的推导过程。
    2. SVM 要重点准备，经常会问到
        SVM 原问题和对偶问题关系？ 为什么要把原问题转换为对偶问题？alpha 系数有多少个？为什么求解对偶问题更加高效  SVM 的核函数的作用？
        KKT 条件有哪些，完整描述
        SVM 怎么防止过拟合？SVM 里面的松弛变量？
        SVM 为什么样本点到决策面是 1/||w|| 点到直线距离公式????
    3. 知道 LR 和 SVM 有什么不同吗？
        SVM 决策面只由少量的支持向量决定，而 LR 的话是所有样本都会参与决策面的更新。
        SVM 对于异常点不敏感，而 LR 敏感。SVM 更加健壮，决策面不受非支持向量影响。
    4. XGBoost and GBDT 部分
        XGBT 与一般提升树的区别在哪，还问到了一般的优化方法有哪些
    5. 贝叶斯
    6. L1 正则为什么可以把系数压缩成 0，坐标下降法的具体实现细节?
    7. 对于机器学习你都学了哪些？讲一个印象深的？
    8. 决策树：
        信息增益，信息增益率，基尼系数
        C4.5 比较 ID3，优点？
        决策树如何防止过拟合？剪枝，前剪枝和后剪枝。说了 REP 剪枝。C4.5 是悲观剪枝
    9. K-means
        手写一下 Kmeans？kd-tree？
        K-means 聚类个数选择，做什么样的试验来确定 K
        k-means 知道么，具体是怎么回事？：最大化簇间距离，最小化簇内距离 距离使用的哪种距离，你知道哪种距离?
        Kmeans 中，现在给你 n 个样本点不在欧式空间中，无法度量距离。现在给了一个函数 F，可以衡量任意两个样本点的相似度。请问 Kmeans 如何操作？
        1、首先，随机去 4 个点，作为初始类簇中心。
        2、计算所有样本点与这 4 个点的 F 相似度。根据相似程度，把所有样本点分到 4 个类中。
        3、在这 4 个类中，计算每一个样本点 i 到该类其他样本点的相似度和 Si。取 Si 最大的那个点作为这个类的中心。
        4、重复 2、3 步骤，直到类中心不再变化或者循环次数达到目标。
    10. 避免过拟合的方法?
         决策树剪枝、L2 正则和 L1 正则
         为什么 L1 正则可以实现参数稀疏，而 L2 正则不可以？
         L1 正则因为是绝对值形式，很多系数被压缩为 0,。而 L2 正则是很多系数被压迫到接近于 0，而不是 0 .....????
         为什么 L1 很多系数可以被压缩为 0，L2 是被压缩至接近于 0？
         图像上，L1 正则是正方形，L2 正则是圆形。
         L1 正则的往往取到正方形顶点，即有很多参数为 0
         L2 正则往往去不到圆形和参数线的交点，即很多分量被压缩到接近于 0
    11. 梯度下降？梯度上升？ 为什么损失函数有个负号？
    12. 知道哪几种聚类算法，说下原理
    13. 了解 bagging 和 boosting 吗？
        为什么 bagging??	bootstrap aggregating
    14. RF 随机森林 算法
    15. 推荐算法熟悉么
        协同过滤里面怎么细分？细分之后的算法举出几个
    16. 梯度下降：为什么多元函数在负梯度方向下降最快？ 推导公式？ [[https://www.nowcoder.com/discuss/66114?type=2&order=0&pos=14&page=1][niuke]]
    17. 深度学习有关：
        Sigmoid 激活函数为什么会出现梯度消失？Sigmoid 函数导数的最大值出现在哪个值
        ReLU 激活函数为什么能解决梯度消失问题？
        Softmax 是和什么 loss function 配合使用？-->多项式回归 loss
        推导 BP 算法?  Faster rcnn
    18. 机器学习中评价指标：Accuracy、Precision、Recall
    19. 详细解释 ROC 曲线，要求给出必要的公式推导。
    20. boosting 算法
        Adaboost 算法？
    21. 内容推荐? 文章推荐算法？？？？

** 实际问题
    1. 有一堆已经分好的词，如何去发现新的词
    2.
** Spark Hadoop HBase 相关
    1. Spark 原理？spark Executor memory 给 16G  executor core 给 2 个。问每个 core 分配多少内存
    2. Spark 是多线程模式，怎么退化为多进程模式。
    3. 之前写过 spark？写过统计日志用户数？那手写一下统计用户数（scala 手写）
    4. hadoop 重要的 2 点
       HDFS，正是由于有了分布式文件系统，才可以分布式计算 and ??
** 算法相关
    1. 连续子数组最大乘积？边界问题？溢出？
    2. 括号匹配的检查？
    3. 学过图吧？给你一个有向图，怎么检测有环？
    4. 二分查找问题
    5. 给定二叉树前序、中序遍历结果。求后序遍历结果？
    6. 全排列
    7. 数组第 k 大的数
    8. 数组左减右，求最大差
    9. 树的路径和
    10. Trie 树
    11. 红黑树 B 树、2-3-4 树
    12. 排序算法
        快排。堆排。。
        快排的非递归实现
        mergeSort
    13. 最大子序列和
    14. 平衡二叉树是怎么回事，介绍一下
    15. 链表中有环怎么找？两个指针
    16. 海量数据中找中位数（数据有 100G,内存只有 1G）：利用外部排序确定，或者可以用两个堆
    17. 文件里包含了大量 URL，每行一个，其中有很多重复。编写一个方法，输出出现次数前 5 多的 URL。
        mapreduce?
    18. 二叉树的广度优先遍历和深度优先遍历。
    19. 字符串匹配算法都知道有哪些？朴素匹配和 KMP 手写一下
    20. 手写 dijstra
    21. 手打层次打印二叉树：用两个队列
    22. 动态规划和递归的概念？dp 自顶向下和自底向上区别，1 道 dp 水题
    23. 完全二叉树的节点个数
    24. 翻转链表?
    25. 第一个是关于二叉树的遍历，不能用栈，不能递归。第二个是链表本地倒置。然后讨论了地图算法相关的问题。

** 数据库
    1. 数据库中主键、索引和外键。以及作用

** 设计类问题？
    1. 问答系统，有 200W 个 FAQ，如何用分类模型做分类
        用倒排索引，把 FAQ 的问题分词，每个词对应多个 FAQ。新来的 query 分词，每个词对应的 FAQ 拉出来。再在这个里面做分类。
        倒排索引？？？
    2. 一个景点有很多信息，位置、门票、类型等等。设计一个知识图谱。这个事情如果交给你来做，你会怎么推进？
        知识图谱？？？wtf？

** 计算机网络
    计算机网络
    从上到下说出网络有哪些层，每层具体应用？
    浏览器是哪一层的？
    动态协议和静态协议有哪些？
    TCP 与 UDP 区别，三次握手，四次挥手解释下？
** 操作系统
    1. 说一下进程和线程，区别是什么
    2. 银行家算法
    3. 死锁条件

** Python 相关
    1. 进程线程 GIL
    2. 内存管理的方法
    3. 直接问你个开发中的实际问题吧，如果写的程序跑的非常慢，多方面分析这个问题？
    4. Python 如何定义一个私有变量
** Java Or C++
    1. JVM

** Linux
    1. linux 命令，知道多少说多少

** 概率和统计相关


https://www.nowcoder.com/discuss/52210?type=0&order=4&pos=92&page=2
https://www.nowcoder.com/discuss/13624?type=0&order=4&pos=103&page=2
https://www.nowcoder.com/discuss/61907?type=0&order=4&pos=58&page=1
https://www.nowcoder.com/discuss/25841?type=0&order=4&pos=42&page=1
https://www.nowcoder.com/discuss/22196?type=0&order=4&pos=41&page=1
https://www.nowcoder.com/discuss/12476?type=0&order=4&pos=22&page=1

我之前一直将机器学习算法当做考试一样学，学了很多，甚至自己推导，复现代
码实现，然而这并不代表我真的学懂了。深入理解机器学习，要的是能够透过现
象看清算法背后的本质，而且要有着自己对它的思考，不是仅仅停留在表面，哪
怕把推导，特性什么的都背一遍也没有用。因为只要换个问题场景，问个开放性
问题，如果面试者没有对算法有深入理解，没有很强的 learning sense，很容易
就被问倒了，这也是高水平的面试官喜欢问的，因为面试者水平会暴露的一览无
余。然而深入理解算法，需要的是长期的学习，思考，以及丰富的实践经验，我
觉得这也是这个岗位隐藏的高门槛所在，同时也是许多自学的同学和本科生所缺
乏的
